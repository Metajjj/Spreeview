@using CommonLibrary.DataClasses.SeriesModel
<!-- Episode and Reviews section -->
@if (DisplayEpisode == true)
{
	<div class="flex justify-center items-center my-6">
		<!-- Popup Version -->
		<AuthorizeView>
			<Authorized>
				<button class="bg-purple-600 rounded-lg text-white flex gap-2 py-4 px-6" @onclick="TogglePopup">
					<span>Write a Review</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-pen" viewBox="0 0 16 16">
						<path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001m-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708z" />
					</svg>
				</button>
			</Authorized>
			<NotAuthorized>
				<a href="/login">
					<button class="button-purple form-button">Login to review</button>
				</a>
			</NotAuthorized>
		</AuthorizeView>
	</div>
	<EpisodeLoader seriesId="@series.Id" />
}

@code {
	[Parameter]
	public SeriesGetDTO series { get; set; }

	[Parameter]
	public bool DisplayEpisode { get; set; }

	[Parameter]
	public EventCallback TogglePopup { get; set; }

	private void ToggleEvent()
	{
		TogglePopup.InvokeAsync();
	}
}
