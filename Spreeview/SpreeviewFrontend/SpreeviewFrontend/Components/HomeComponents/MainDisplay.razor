@using CommonLibrary.DataClasses.SeriesModel
@using SpreeviewFrontend.Components.Series
@using SpreeviewFrontend.Services.ApiSeries
@rendermode InteractiveServer
@inject IApiSeriesService SeriesService

<SearchBar OnSearchSubmitted="HandleSearch" />
@if (series.Count > 0)
{
    <PopularSeriesDisplay series="series" />
}
else if (errorMessage != null)
{
    <div class="load-message">
        We faced an error when loading the series: @errorMessage
    </div>
}
else
{
	<SeriesLoader LoadingType="@LoadingType.Trending" />
}

@code {
    public string SearchTerm { get; set; } = string.Empty;

    private List<SeriesGetDTO> series { get; set; } = [];

    private string errorMessage { get; set; }

    private async Task HandleSearch(string searchTerm)
    {
        Console.WriteLine($"Search submitted: {searchTerm}");
        SearchTerm = searchTerm;

        // TODO: refactor this to handle errors using the ServiceObjectResponse instead of try catch
        try
        {
            series = (await SeriesService.FindSeriesByKeyword(searchTerm)).Value;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }

        StateHasChanged();
    }
}
