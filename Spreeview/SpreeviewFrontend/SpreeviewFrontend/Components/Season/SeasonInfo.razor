@inject NavigationManager Navigation

@using CommonLibrary.DataClasses.SeasonModel
@using CommonLibrary.DataClasses.SeriesModel
@rendermode InteractiveServer

<!--Episodes section-->
<div class="flex gap-4 items-center py-4 flex-col">
	<div>
		<h2 class="text-center mt-6 text-2xl font-medium">
			Episodes
		</h2>
		<div class="h-[2px] bg-purple-600 w-[3rem] m-auto" />
	</div>

	<div class="flex gap-2 flex-wrap justify-center">
		@for (var i = 1; i <= season.Episodes.Count; i++)
		{
			var episodeId = @season.Episodes[i - 1].Id;
			var episodeNumber = @season.Episodes[i - 1].EpisodeNumber;
			<button class="bg-black text-white text-lg px-4 py-2 rounded-xl shadow-purple-small click-transition" @onclick="() => setEpisode((episodeId, episodeNumber))">@i</button>
		}
	</div>
</div>

@code {
	private string GetEpisodeUrl() => $"/series/{seriesId}?season={season.SeasonNumber}&episode={EpisodeNumber}";

	[Parameter]
	public SeasonGetDTO season { get; set; }

	[Parameter]
	public EventCallback<(int, int)> SelectEpisode { get; set; }

	public int EpisodeNumber { get; set; }

	[Parameter]
	public int seriesId { get; set; }

	private async Task setEpisode((int Id, int Number) episode)
	{
		EpisodeNumber = episode.Number;
		await SelectEpisode.InvokeAsync((episode.Id, episode.Number));
		StateHasChanged();
		Navigation.NavigateTo(GetEpisodeUrl(), forceLoad: false);
	}
}
