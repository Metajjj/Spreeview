@using CommonLibrary.DataClasses.EpisodeModel
@using CommonLibrary.DataClasses.ReviewModel
@using CommonLibrary.DataClasses.SeriesModel
@using SpreeviewFrontend.Services.ApiReview
@using SpreeviewFrontend.Components.Series
@inject IApiReviewService ReviewService
@inject NavigationManager Navigation

@if (reviews != null && reviews.Count > 0)
{
    <ReviewInfo reviews="@reviews" />
}
else if (errorMessage != null)
{
    <div class="load-message">
        We faced an error when loading the reviews: @errorMessage
    </div>
}
else
{
    <div class="load-message mt-10">
        There are currently no reviews for this episode, please write a review!
    </div>
}

@code {
    public List<ReviewGetDTO> reviews { get; set; } = new();

    private string errorMessage { get; set; }

    [Parameter]
    public int EpisodeId { get; set; }

    [CascadingParameter]
    public RefreshReviewsClass RefreshReviews { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine("Refreshing");
        await GetReviews();
    }

    public async Task GetReviews()
    {
        Console.WriteLine(EpisodeId);
        try
        {
            reviews = (await ReviewService.GetEpisodeReviews(EpisodeId)).Value;

            if (reviews.Count == 0)
            {
                Console.WriteLine("No reviews found.");
            }
            else
            {
                Console.WriteLine($"Loaded {reviews.Count} reviews.");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        StateHasChanged();
    }
}
