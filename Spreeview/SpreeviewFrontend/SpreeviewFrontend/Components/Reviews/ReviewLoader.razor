@using CommonLibrary.DataClasses.EpisodeModel
@using CommonLibrary.DataClasses.ReviewModel
@using SpreeviewFrontend.Services.ApiReview
@inject IApiReviewService ReviewService
@inject NavigationManager Navigation

@if (reviews != null)
{
    <ReviewInfo reviews="reviews" />
}
else if (errorMessage != null)
{
    <div class="load-message">
        We faced an error when loading the series: @errorMessage
    </div>
}
else
{
    <div class="load-message">
        Loading Series...
    </div>
}

@code {
    [Parameter]
    public List<ReviewGetDTO> reviews { get; set;  }

    private string errorMessage { get; set; }

    [Parameter]
    public EpisodeGetDTO episode { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            reviews = (await ReviewService.GetEpisodeReviews(episode.Id)).Value;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
